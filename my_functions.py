"""
1 Skriv en funktion som tar en strÃ¤ng som parameter.
NÃ¤r den anropas ska den skriva ut strÃ¤ngen och "Ã¤r en fena pÃ¥ programmering". Exempel:
my_function("David") â†’ "David Ã¤r en riktig hacker"
"""
def my_name(name):
    print(f"{name} Ã¤r en ğŸª½ pÃ¥ programmering!")

"""
2a Skriv en funktion med namnet "eko". 
NÃ¤r den anropas med en strÃ¤ng ska den upprepa strÃ¤ngen, och skriva ut resultatet. 
Exempel:
eko("hej") â†’ skriver ut "hejhej"
"""
def eco(word):
    print(f"{word} & {word}")

"""
2b LÃ¤gg till en parameter "count", 
som avgÃ¶r hur mÃ¥nga ekon som ska skapas. 
Exempel:
eko("hej", 3) â†’ skriver ut "hejhejhej"
"""
def count_eco(word,count):
    result = word * count
    print(result)
    return result

"""
3 FÃ¶ljande kod ska sluta loopa efter 5 varv. 
Flytta den in i en funktion och justera den enligt kommentaren.
end = 5
y = 1
for x in range(1, 100):
    y *= 2
    # avsluta loopen med en if-sats hÃ¤r
print(y)

"""
def loop_five():
    end = 5
    y = 1
    for x in range(1,100):
        y *= 2
        print(y)
        if x == end:
            break

"""
4 Skriv en funktion med namnet last. 
Den ska ta en lista som parameter och returnera det sista elementet i listan.
last([1, 2, 3]) â†’ 3
"""
def last(lst):
    if lst:  # Kollar om listan inte Ã¤r tom
        return print(lst[-1])  # Returnerar sista elementet
    else:
        return print("Listan Ã¤r tom!")  # Returnerar None om listan Ã¤r tom

"""
5 Skriv en funktion med namnet cut_edges. 
Den ska ta en lista som parameter. 
NÃ¤r den anropas ska den returnera en ny lista, 
dÃ¤r den har tagit bort fÃ¶rsta och sista elementet.
cut_edges([1, 2, 3, 4]) â†’ [2, 3]
"""
def cut_edges(lst):
    if len(lst) < 2:
        return []
    return print(lst[1:-1])

"""
6 LÃ¶s felen i koden.
def increase(x):
    return x
    x += 1

print(increase(1))
"""
def increase(x):
    x += 1 # Ã–ka vÃ¤rdet med 1
    return x # Returnera det uppdaterade vÃ¤rdet

"""
7 Bygg en funktion med namnet average. 
Den ska ta parametrar: x och y. 
BÃ¥da ska vara tal. 
Funktionen ska returnera medelvÃ¤rdet. 
Till exempel sÃ¥ rÃ¤knar man ut medelvÃ¤rdet av 4 och 8 genom med formeln: 
(4 + 8) / 2, vilket blir 6.
Tips: det kan vara enklare att anvÃ¤nda fler variabler.
"""
def average(x,y):
    total = x + y
    avg = total / 2
    return avg

average_2 = lambda x, y: (x + y) / 2

"""
8 GÃ¶r en funktion som kan skriva ut innehÃ¥llet i en lista lite snyggare. 
FÃ¶rst ska funktionen tala om ifall listan Ã¤r tom, eller hur mÃ¥nga element den har. 
Sedan ska funktionen skriva ut elementen i en punktlista. 
Exempel:
pretty_print(["a", "b", 3.14])
Listan har 3 element:
1. a
2. b
3. 3.14
"""
def pretty_print(lst):
    if not lst:
        print("Listan Ã¤r tom.")
    else:
        print(f"Listan har {len(lst)} element:")
        for i in range(len(lst)):
            print(f"{i + 1}. {lst[i]}")